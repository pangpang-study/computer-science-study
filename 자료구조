> ### 자료구조란?
- 컴퓨터 과학에서 효율적인 접근 및 수정을 가능케 하는 자료의 조직, 관리, 저장
- 데이터 값의 모임, 또 데이터 간의 관계, 그리고 데이터에 적용할 수 있는 함수나 명령을 의미함
- `선택하는 자료 구조에 따라 보다 효율적인 알고리즘을 사용할 수 있음`
- 어떤 자료 구조를 사용하느냐에 따라 프로그램 구현의 난이도나 성능이 결정됨
-> 프로그램을 설계할 때 가장 먼저 고려해야 함(자료구조를 고르면 사용할 알고리즘이 상대적으로 명확해짐)
- 자료구조의 중요성으로 인해, 최근의 프로그래밍 언어 및 개발 환경은 다양한 표준 라이브러리를 제공하고 있음
ex) C++의 표준 템플릿 라이브러리, 자바의 자바 API, 마이크로소프트 .NET과 etc
<br/> 

> ###  자료구조의 분류

1. 구현에 따라
- 배열: 가장 일반적인 구조. 메모리 상에 같은 타입의 자료가 연속적으로 저장됨. 자료값을 나타내는 가장 작은 단위가 자료를 다루는 단위. 파이썬에서는 [a, b, c, d]의 형태로 쓰임.
- 튜플: 둘 이상의 자료형을 묶음으로 다루는 구조. 파이썬에서의 튜플은 (a, b, c, d)의 형태로 쓰이며, 리스트는 그 값의 생성, 삭제, 수정이 가능하지만 튜플은 값을 바꿀 수 없음.
```
t1 = ()
t2 = (1,)
t3 = (1, 2, 3)
t4 = 1, 2, 3
t5 = ('a', 'b', ('ab', 'cd'))
```
튜플에서는 t2 = (1,)처럼 단지 1개의 요소만을 가질 경우 요소 뒤에 콤마(,)를 반드시 붙여야 함.
t4 = 1, 2, 3과 같이 괄호 생략 가능.

- 연결 리스트
- 원형 연결 리스트
- 이중 연결 리스트
- 환형 이중 연결 리스트
- 해시 테이블

2. 형태에 따라
- 선형 구조
  - 스택
  - 큐
    - 환형 큐 
  - 덱
- 비선형 구조
  - 그래프
    - 유향 그래프, 무향 그래프
  - 트리
     *이진 트리
    - 힙
